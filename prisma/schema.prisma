// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Session {
//   id           Int   @id @default(autoincrement())
//   sessionToken String   @unique
//   userId       Int   
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

model User {
  id           Int     @id @default(autoincrement())
  name         String
  firstName    String  
  lastName     String  @unique
  email        String  @unique
  password     String
  phone        String
  profileImage String?
  status       Boolean @default(false)
  inviteSent   Boolean @default(false) 
  passwordResetToken   Int?
  passwordResetCount   Int?
  passwordResetTokenExpiresAt DateTime?
  //session      Session[]
  // Foreign key to Role
  roleId       Int
  role         Role @relation(fields: [roleId], references: [id])
  customers    Customers[]

  @@index([roleId], name: "idx_roleId")

  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
}

// model RoleOld {
//   id              Int  @id @default(autoincrement())
//   displayTitle     String // Human-friendly name for UI
//   roleTitle        String  @unique // Programmatic name for code
//   description     String?
//   // Relationships
//   users           User[]

//   // Module Permissions
//   canViewDashboard Boolean @default(false)

//   canViewUsers   Boolean @default(false)
//   canAddUsers    Boolean @default(false)
//   canEditUsers   Boolean @default(false)
//   canDeleteUsers Boolean @default(false)
  
//   canViewRoles     Boolean @default(false)
//   canAddRoles     Boolean @default(false)
//   canEditRoles    Boolean @default(false)
//   canDeleteRoles  Boolean @default(false)

//   canViewSales     Boolean @default(false)
//   canAddSales     Boolean @default(false)
//   canEditSales    Boolean @default(false)
//   canDeleteSales  Boolean @default(false)

//   canViewCustomers     Boolean @default(false)
//   canAddCustomers     Boolean @default(false)
//   canEditCustomers    Boolean @default(false)
//   canDeleteCustomers  Boolean @default(false)

//   canViewOrders     Boolean @default(false)
//   canAddOrders     Boolean @default(false)
//   canEditOrders    Boolean @default(false)
//   canDeleteOrders  Boolean @default(false)

//   canViewPos     Boolean @default(false)

//   canViewStockTransfer     Boolean @default(false)
//   canAddStockTransfer     Boolean @default(false)
//   canEditStockTransfer    Boolean @default(false)
//   canDeleteStockTransfer  Boolean @default(false)

//   canViewStockAdjustment     Boolean @default(false)
//   canAddStockAdjustment     Boolean @default(false)
//   canEditStockAdjustment    Boolean @default(false)
//   canDeleteStockAdjustment  Boolean @default(false)

//   canViewApi     Boolean @default(false)
//   canViewReports     Boolean @default(false)
//   canViewSettings     Boolean @default(false)
  
//   canViewMainCategories   Boolean @default(false)
//   canAddMainCategories    Boolean @default(false)
//   canEditMainCategories   Boolean @default(false)
//   canDeleteMainCategories Boolean @default(false)

//   canViewCategories   Boolean @default(false)
//   canAddCategories    Boolean @default(false)
//   canEditCategories   Boolean @default(false)
//   canDeleteCategories Boolean @default(false)

//   canViewSubCategories   Boolean @default(false)
//   canAddSubCategories    Boolean @default(false)
//   canEditSubCategories   Boolean @default(false)
//   canDeleteSubCategories Boolean @default(false)

//   canViewBrands   Boolean @default(false)
//   canAddBrands    Boolean @default(false)
//   canEditBrands   Boolean @default(false)
//   canDeleteBrands Boolean @default(false)

//   canViewAdverts   Boolean @default(false)
//   canAddAdverts    Boolean @default(false)
//   canEditAdverts   Boolean @default(false)
//   canDeleteAdverts Boolean @default(false)

//   canViewBanners   Boolean @default(false)
//   canAddBanners    Boolean @default(false)
//   canEditBanners   Boolean @default(false)
//   canDeleteBanners Boolean @default(false)

//   canViewUnits   Boolean @default(false)
//   canAddUnits    Boolean @default(false)
//   canEditUnits   Boolean @default(false)
//   canDeleteUnits Boolean @default(false)

//   canViewProducts   Boolean @default(false)
//   canAddProducts    Boolean @default(false)
//   canEditProducts   Boolean @default(false)
//   canDeleteProducts Boolean @default(false)  

//   canViewWarehouses   Boolean @default(false)
//   canAddWarehouses    Boolean @default(false)
//   canEditWarehouses   Boolean @default(false)
//   canDeleteWarehouses Boolean @default(false)

//   canViewSuppliers   Boolean @default(false)
//   canAddSuppliers    Boolean @default(false)
//   canEditSuppliers   Boolean @default(false)
//   canDeleteSuppliers Boolean @default(false)

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
model Role {
  id              Int  @id @default(autoincrement())
  displayTitle     String // Human-friendly name for UI
  roleTitle        String  @unique // Programmatic name for code
  description     String?
  // Relationships
  users           User[]

  // Module Permissions
  canViewDashboard Boolean @default(false)
  canViewUsers   Boolean @default(false)
  canViewRoles     Boolean @default(false)
  canViewSales     Boolean @default(false)
  canViewCustomers     Boolean @default(false)
  canViewOrders     Boolean @default(false)
  canViewPos     Boolean @default(false)
  canViewStockPurchase     Boolean @default(false)
  canViewStockAdjustment     Boolean @default(false)
  canViewApi     Boolean @default(false)
  canViewReports     Boolean @default(false)
  canViewSettings     Boolean @default(false)
  canViewMainCategories   Boolean @default(false)
  canViewCategories   Boolean @default(false)
  canViewSubCategories   Boolean @default(false)
  canViewBrands   Boolean @default(false)
  canViewAdverts   Boolean @default(false)
  canViewBanners   Boolean @default(false)
  canViewUnits   Boolean @default(false)
  canViewProducts   Boolean @default(false)  
  canViewWarehouses   Boolean @default(false)
  canViewSuppliers   Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model MainCategory {
  id           Int @id @default(autoincrement())
  title        String
  slug         String @unique
  categories   Category[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
}

model Category {
  id          Int @id @default(autoincrement())
  title       String
  description String?
  imageUrl    String?
  status      Boolean @default(true)
  slug        String @unique
  mainCategoryId  Int
  mainCategory    MainCategory @relation(fields: [mainCategoryId], references: [id])
  subCategories   SubCategory[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt  
}

model SubCategory {
  id           Int @id @default(autoincrement())
  title        String
  slug         String @unique
  categoryId   Int
  products     Products[]
  category     Category @relation(fields: [categoryId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
}

model Brand {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  products  Products[]
  status    Boolean
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Unit {
  id           Int      @id @default(autoincrement())
  title        String @unique
  abbreviation String @unique
  products     Products[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Warehouse {
  id        Int      @id @default(autoincrement())
  name      String
  slug      String @unique
  imageUrl  String?
  phone     String
  email     String
  country   String
  city      String
  zipCode   String
  contactPerson String
  status        Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Supplier {
  id              Int      @id @default(autoincrement())
  name            String
  slug            String @unique
  status          Boolean
  imageUrl        String?
  products        Products[]
  purchaseOrders  PurchaseOrder[]
  companyName     String
  vatNumber       String
  email           String
  phone           String
  address         String
  city            String
  state           String
  postalCode      String
  country         String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Banner {
  id         Int @id @default(autoincrement())
  title      String @default("")
  imageUrl   String?
  bannerLink String
  position   String
  status     Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum AdvertSize {
  SMALL
  MEDIUM
  LARGE
  EXTRA_LARGE
}

model Advert {
  id         Int @id @default(autoincrement())
  title      String
  imageUrl   String?
  advertLink String
  size       AdvertSize @default(SMALL)
  position   String
  status     Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Products {
  id                Int      @id @default(autoincrement())
  name              String
  slug              String   @unique
  productCode       Int
  stockQty          Int
  codeSymbology     String
  saleUnit          Int?
  productCost       Float
  productPrice      Float
  productTax        Float
  supplierPrice     Float @default(100)
  taxMethod         String
  productImages     String[]
  productThumbnail  String?
  barcodeImageUrl   String?
  productDetails    String
  content           String?
  batchNumber       String
  expiryDate        DateTime
  isFeatured        Boolean @default(false)
  status            Boolean
  alertQuantity     Int

  adjustments       AdjustmentItem[]
  purchaseOrders    PurchaseOrderItem[]
  unitId            Int
  unit              Unit @relation(fields:[unitId], references: [id])
  subCategoryId     Int
  subCategory       SubCategory @relation(fields:[subCategoryId], references: [id])
  brandId           Int
  brand             Brand @relation(fields:[brandId], references: [id])
  supplierId        Int?
  supplier          Supplier? @relation(fields:[supplierId], references: [id])
  lineOrderItem     LineOrderItem[]
  sale              Sale[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

// model WarehouseProduct {
//   id           Int        @id @default(autoincrement())
//   warehouseId  Int
//   productId    Int
//   warehouse    Warehouse  @relation(fields: [warehouseId], references: [id])
//   product      Products   @relation(fields: [productId], references: [id])
//   createdAt    DateTime   @default(now())
//   updatedAt    DateTime   @updatedAt

//   @@unique([warehouseId, productId])
// }

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PurchaseOrderStatus {
  PAID
  PARTIAL
  UNPAID
}

model LineOrderItem {
  id               Int   @id @default(autoincrement())
  productId        Int   
  orderId          Int  
  name             String
  price            Float
  qty              Int
  productThumbnail String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relationships
  product   Products   @relation(fields: [productId], references: [id])
  lineOrder LineOrder @relation(fields: [orderId], references: [id])
}

model LineOrder {
  id           Int   @id @default(autoincrement())
  customerId   Int  
  customerName String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  orderNumber  String @unique
  status       OrderStatus @default(DELIVERED)
  customerEmail String?
  orderAmount   Int?
  orderType     String?
  source        String @default("pos")
  // Ecommerce
  firstName   String?
  lastName    String?
  email       String?
  phone       String?
  // Shipping Details
  streetAddress String?
  city        String?
  state       String?
  zipCode     String?
  country     String?
  unitNumber  String?
  // POS
  paymentMethod String?
  // 
  //Relationship
  lineOrderItems LineOrderItem[]
  sales          Sale[]
  receipts       Receipt[]
}


model Sale {
  id           Int   @id @default(autoincrement())
  orderId      Int  
  productId    Int  
  qty          Int
  salePrice    Float
  productName  String
  productImage String
  customerName String
  customerEmail String?
  customerPhone String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relationships
  product   Products   @relation(fields: [productId], references: [id])
  lineOrder LineOrder @relation(fields: [orderId], references: [id])
}

model Feedback {
  id           Int   @id @default(autoincrement())
  title        String
  message      String
  orderItemIds Int[]
  userId       Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Address {
  id         Int  @id @default(autoincrement())
  street     String
  city       String
  state      String
  postalCode String
  country    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Customers {
  id             Int  @id @default(autoincrement())
  userId         Int  
  additionalInfo String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relationships
  user            User   @relation(fields: [userId], references: [id])
  billingAddress  String
  shippingAddress String
}

model Receipt {
  id          String   @id @default(uuid())
  orderId     Int
  imageUrl    String
  email       String
  createdAt   DateTime @default(now())

  lineOrder LineOrder @relation(fields: [orderId], references: [id])
}

enum NotificationStatus {
  WARNING
  DANGER
  INFO
}
model Notification {
  id            Int   @id @default(autoincrement())
  message       String
  status        NotificationStatus @default(WARNING)
  statusText    String
  read          Boolean @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Adjustment {
  id            Int   @id @default(autoincrement())
  refNo         String @unique @default("AAAAB")
  reason        String 
  items         AdjustmentItem[]
  
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model AdjustmentItem {
  id            Int   @id @default(autoincrement())
  quantity      Int
  type          String
  currentStock  Int
  productName   String

  adjustmentId  Int
  adjustment    Adjustment @relation(fields: [adjustmentId], references: [id])
  productId     Int
  product       Products   @relation(fields: [productId], references: [id])

  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model PurchaseOrder {
  id            Int    @id @default(autoincrement())
  supplierId    Int
  supplier      Supplier          @relation(fields: [supplierId], references: [id])
  status        PurchaseOrderStatus @default(PAID)
  discount      Int?
  notes         String?
  tax           Int?
  refNo         String
  totalAmount   Int
  balanceAmount Int 
  shippingCost  Int?
  items         PurchaseOrderItem[]
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}

model PurchaseOrderItem {
  id              Int   @id @default(autoincrement())
  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id])
  purchaseOrderId Int
  productId       Int  
  product         Products       @relation(fields: [productId], references: [id])
  quantity        Int
  productName     String
  unitCost        Int
  subTotal        Int
  currentStock    Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}